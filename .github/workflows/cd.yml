name: CD - Build & Push (api-gateway)

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  pull_request:
    branches: [develop]

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      # QEMU s√≥ quando for multi-arch (fora de PR)
      - uses: docker/setup-qemu-action@v3
        if: github.event_name != 'pull_request'

      - uses: docker/setup-buildx-action@v3

      # Login apenas fora de PR
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: raiaiaia/api-gateway
          tags: |
            type=sha,format=short,prefix=sha-
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=dev,enable=${{ github.ref == 'refs/heads/develop' }}


      # Build para PR (sem push, mas carrega no runner)
      - name: Build (PR)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Build + Push para main/tags (multi-arch)
      - name: Build & Push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
